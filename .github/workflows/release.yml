name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Get version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=v$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"
    
    - name: Validate version format
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Invalid version format '$VERSION'. Expected format: X.Y.Z"
          exit 1
        fi
    
    - name: Validate source files
      run: |
        echo "Validating source files..."
        ERRORS=0
        
        # Check agent plugin
        if [ ! -f "local/share/check_mk/agents/plugins/oposs_smart_error" ]; then
          echo "Error: Agent plugin not found"
          ERRORS=$((ERRORS + 1))
        fi
        
        # Check check plugins
        FILES=(
          "local/lib/python3/cmk_addons/plugins/oposs_smart_error/agent_based/oposs_smart_error.py"
          "local/lib/python3/cmk_addons/plugins/oposs_smart_error/checkman/oposs_smart_error"
          "local/lib/python3/cmk_addons/plugins/oposs_smart_error/graphing/oposs_smart_error.py"
          "local/lib/python3/cmk_addons/plugins/oposs_smart_error/rulesets/oposs_smart_error.py"
          "local/lib/python3/cmk_addons/plugins/oposs_smart_error/rulesets/ruleset_oposs_smart_error_bakery.py"
        )
        
        for file in "${FILES[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Error: Check plugin file not found: $file"
            ERRORS=$((ERRORS + 1))
          fi
        done
        
        # Check bakery plugin
        if [ ! -f "local/lib/python3/cmk/base/cee/plugins/bakery/oposs_smart_error.py" ]; then
          echo "Error: Bakery plugin not found"
          ERRORS=$((ERRORS + 1))
        fi
        
        if [ $ERRORS -gt 0 ]; then
          echo "Validation failed with $ERRORS errors"
          exit 1
        fi
        
        echo "All source files validated successfully"
    
    - name: Run Python syntax check
      run: |
        echo "Checking Python syntax..."
        python3 -m py_compile local/lib/python3/cmk_addons/plugins/oposs_smart_error/agent_based/oposs_smart_error.py
        python3 -m py_compile local/lib/python3/cmk_addons/plugins/oposs_smart_error/graphing/oposs_smart_error.py
        python3 -m py_compile local/lib/python3/cmk_addons/plugins/oposs_smart_error/rulesets/oposs_smart_error.py
        python3 -m py_compile local/lib/python3/cmk_addons/plugins/oposs_smart_error/rulesets/ruleset_oposs_smart_error_bakery.py
        python3 -m py_compile local/lib/python3/cmk/base/cee/plugins/bakery/oposs_smart_error.py
        python3 -m py_compile local/share/check_mk/agents/plugins/oposs_smart_error
        echo "Python syntax check passed"
    
    - name: Build MKP package
      id: build_mkp
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        BUILD_DIR="/tmp/mkp_build"
        PACKAGE_NAME="oposs_smart_errors"
        OUTPUT_FILE="${PACKAGE_NAME}-${VERSION}.mkp"
        
        echo "Building MKP package version $VERSION"
        
        # Create build directory
        mkdir -p "$BUILD_DIR"
        
        # Create tar files
        echo "Creating component tar files..."
        
        # Create agents.tar
        tar -cf "$BUILD_DIR/agents.tar" -C "local/share/check_mk/agents" plugins/oposs_smart_error
        
        # Create cmk_addons_plugins.tar
        tar -cf "$BUILD_DIR/cmk_addons_plugins.tar" -C "local/lib/python3/cmk_addons/plugins" oposs_smart_error/
        
        # Create lib.tar
        tar -cf "$BUILD_DIR/lib.tar" -C "local/lib/python3" cmk/base/cee/plugins/bakery/oposs_smart_error.py
        
        # Create info.json
        cat > "$BUILD_DIR/info.json" << EOF
        {
            "title": "SMART Error Monitoring Plugin",
            "name": "$PACKAGE_NAME",
            "description": "A comprehensive CheckMK plugin for monitoring SMART error counters on storage devices. This plugin collects detailed error statistics from drives and provides threshold-based alerting and graphing.",
            "version": "$VERSION",
            "version.packaged": "2.3.0p34",
            "version.min_required": "2.3.0p1",
            "version.usable_until": null,
            "author": "Tobi Oetiker tobi@oetiker.ch",
            "download_url": "https://github.com/oposs/cmk-oposs_smart_error",
            "files": {
                "cmk_addons_plugins": [
                    "oposs_smart_error/agent_based/oposs_smart_error.py",
                    "oposs_smart_error/checkman/oposs_smart_error",
                    "oposs_smart_error/graphing/oposs_smart_error.py",
                    "oposs_smart_error/rulesets/oposs_smart_error.py",
                    "oposs_smart_error/rulesets/ruleset_oposs_smart_error_bakery.py"
                ],
                "agents": [
                    "plugins/oposs_smart_error"
                ],
                "lib": [
                    "cmk/base/cee/plugins/bakery/oposs_smart_error.py"
                ]
            }
        }
        EOF
        
        # Create info file (Python format)
        cat > "$BUILD_DIR/info" << EOF
        {'author': 'Tobi Oetiker tobi@oetiker.ch',
         'description': 'A comprehensive CheckMK plugin for monitoring SMART error counters on storage devices. This plugin collects detailed error statistics from drives and provides threshold-based alerting and graphing.',
         'download_url': 'https://github.com/oposs/cmk-oposs_smart_error',
         'files': {'agents': ['plugins/oposs_smart_error'],
                   'cmk_addons_plugins': ['oposs_smart_error/agent_based/oposs_smart_error.py',
                                          'oposs_smart_error/checkman/oposs_smart_error',
                                          'oposs_smart_error/graphing/oposs_smart_error.py',
                                          'oposs_smart_error/rulesets/oposs_smart_error.py',
                                          'oposs_smart_error/rulesets/ruleset_oposs_smart_error_bakery.py'],
                   'lib': ['cmk/base/cee/plugins/bakery/oposs_smart_error.py']},
         'name': '$PACKAGE_NAME',
         'title': 'SMART Error Monitoring Plugin',
         'version': '$VERSION',
         'version.min_required': '2.3.0p1',
         'version.packaged': '2.3.0p34',
         'version.usable_until': None}
        EOF
        
        # Create final MKP package
        echo "Creating MKP package: $OUTPUT_FILE"
        tar -czf "$OUTPUT_FILE" -C "$BUILD_DIR" agents.tar cmk_addons_plugins.tar lib.tar info info.json
        
        # Verify package
        echo "Package contents:"
        tar -tzf "$OUTPUT_FILE"
        
        # Get file size
        SIZE=$(ls -lh "$OUTPUT_FILE" | awk '{print $5}')
        echo "Package created successfully: $OUTPUT_FILE ($SIZE)"
        
        # Set output variables
        echo "package_file=$OUTPUT_FILE" >> $GITHUB_OUTPUT
        echo "package_size=$SIZE" >> $GITHUB_OUTPUT
        
        # Cleanup
        rm -rf "$BUILD_DIR"
    
    - name: Generate release notes
      id: release_notes
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        PACKAGE_FILE="${{ steps.build_mkp.outputs.package_file }}"
        PACKAGE_SIZE="${{ steps.build_mkp.outputs.package_size }}"
        
        cat > release_notes.md << EOF
        # CheckMK SMART Error Monitoring Plugin v${VERSION}
        
        ## Package Information
        - **Package:** \`${PACKAGE_FILE}\`
        - **Size:** ${PACKAGE_SIZE}
        - **CheckMK Version:** 2.3.0p1 or higher
        - **Target Version:** 2.3.0p34
        
        ## Installation
        1. Download the \`${PACKAGE_FILE}\` from the release assets
        2. Install via CheckMK GUI: Setup → Extension packages → Upload package
        3. Or install via command line: \`mkp install ${PACKAGE_FILE}\`
        
        ## Components
        - Agent plugin for SMART data collection
        - Check plugin for monitoring and alerting
        - Graphing components for visualization
        - Bakery integration for automatic deployment
        - Configuration rulesets for thresholds
        
        ## Features
        - Monitors SCSI error counter logs from storage devices
        - Tracks corrected and uncorrected errors
        - Provides per-TB error rate metrics
        - Configurable thresholds and alerting
        - Automatic device discovery
        - Graceful handling of unsupported devices
        
        ---
        
        **Author:** Tobi Oetiker <tobi@oetiker.ch>  
        **Repository:** https://github.com/oposs/cmk-oposs_smart_error
        EOF
        
        echo "Release notes generated"
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.tag_name }}
        name: "SMART Error Monitoring Plugin v${{ steps.get_version.outputs.version }}"
        body_path: release_notes.md
        files: |
          ${{ steps.build_mkp.outputs.package_file }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: mkp-package-${{ steps.get_version.outputs.version }}
        path: ${{ steps.build_mkp.outputs.package_file }}
        retention-days: 90